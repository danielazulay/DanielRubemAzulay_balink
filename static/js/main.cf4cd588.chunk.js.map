{"version":3,"sources":["block.js","WeatherOne.js","Location.js","App.js","reportWebVitals.js","index.js"],"names":["Block","props","className","date","applicable_date","src","iconRender","weather_state_abbr","alt","class","weather_state_name","Math","floor","max_temp","min_temp","wind_speed","humidity","Number","visibility","toFixed","air_pressure","predictability","WeatherOne","useState","wind_direction","the_temp","timezone_name","sun_rise","sun_set","state","setState","id","location","setLocation","useEffect","a","axios","get","resp","data","JSON","parse","stringify","title","console","log","getWeather","type","value","onChange","event","target","selected","to","today","Date","now","toString","slice","getDate","temp","sn","sl","h","t","hr","lr","s","hc","lc","c","hasOwnProperty","href","Location","time","city","week","consolidated_weather","parent","style","fontSize","marginLeft","map","day","location_type","App","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf4cd588.chunk.js","sourcesContent":["function Block(props) {\n  return (\n    <div className=\"wind\">\n      <ul>\n        <li className=\"date\">{props.date(props.applicable_date)}</li>\n        <div className=\"weatherblock\">\n          <li>\n            <img src={props.iconRender(props.weather_state_abbr)} alt=\"temp\" />\n          </li>\n          <li class=\"weatherlegend\">{props.weather_state_name}</li>\n        </div>\n        <div className=\"tempblock\">\n          <li>Max: {Math.floor(props.max_temp)}&#176;C</li>\n          <li>Min: {Math.floor(props.min_temp)}&#176;C</li>\n        </div>\n        <li className=\"windSpeed\">{Math.floor(props.wind_speed)} mph</li>\n\n        <b>Humidity</b>\n        <li>{Math.floor(props.humidity)}%</li>\n\n        <b>Visibility</b>\n        <li>{Number(props.visibility).toFixed(1)}miles</li>\n\n        <b>Pressure</b>\n        <li>{Math.floor(props.air_pressure)}mb</li>\n\n        <div className=\"units\">\n          <b>Confidence</b>\n          <li>{props.predictability}%</li>\n        </div>\n      </ul>\n    </div>\n  );\n}\n\nexport default Block;\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Block from \"./block\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction WeatherOne() {\n  const [state, setState] = useState({\n    applicable_date: \"\",\n    weather_state_name: \"\",\n    weather_state_abbr: \"\",\n    wind_speed: \"\",\n    wind_direction: \"\",\n    min_temp: \"\",\n    max_temp: \"\",\n    the_temp: \"\",\n    air_pressure: \"\",\n    humidity: \"\",\n    visibility: \"\",\n    timezone_name: \"\",\n    predictability: \"\",\n    sun_rise: \"\",\n    sun_set: \"\",\n  });\n  const [location, setLocation] = useState({ id: \"\" });\n  // get informattion from the api acording to the request(id) and a especific date  (/2021/1/1/) fist of january of 2021\n  useEffect(() => {\n    async function getWeather() {\n      try {\n        const resp = await axios.get(\n          `https://www.metaweather.com/api/location/${location.id}/2021/1/1/`\n        );\n        const data = JSON.parse(JSON.stringify(resp.data));\n\n        setState({ ...data[0], title: data.title });\n\n        console.log(resp.data);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getWeather();\n  }, [location.id]);\n\n  //formting the dates day of the week / moth / day\n  function date(date) {\n    var today = new Date(date);\n    var now = new Date();\n\n    if (now.toString().slice(0, 10) === today.toString().slice(0, 10)) {\n      return \"Today\";\n    } else if (now.getDate() + 1 === today.getDate()) {\n      return \"Tomorow\";\n    } else {\n      return today.toString().slice(0, 10);\n    }\n  }\n  //render the icons of weather acording to the weather\n  function iconRender(temp) {\n    const id = {\n      sn: \"https://www.metaweather.com/static/img/weather/sn.svg\",\n      sl: \"https://www.metaweather.com/static/img/weather/sl.svg\",\n      h: \"https://www.metaweather.com/static/img/weather/h.svg\",\n      t: \"https://www.metaweather.com/static/img/weather/t.svg\",\n      hr: \"https://www.metaweather.com/static/img/weather/hr.svg\",\n      lr: \"https://www.metaweather.com/static/img/weather/lr.svg\",\n      s: \"https://www.metaweather.com/static/img/weather/s.svg\",\n      hc: \"https://www.metaweather.com/static/img/weather/hc.svg\",\n      lc: \"https://www.metaweather.com/static/img/weather/lc.svg\",\n      c: \"https://www.metaweather.com/static/img/weather/c.svg\",\n    };\n\n    if (id.hasOwnProperty(temp)) {\n      return id[temp];\n    }\n  }\n  function handleChange(event) {\n    setLocation({ id: event.target.value });\n  }\n\n  return (\n    <div>\n      <h3 className=\"title\">Info Weather</h3>\n\n      <form type=\"select\">\n        <select value={location.id} onChange={handleChange}>\n          <option selected=\"selected\">Select a Country</option>\n          <option value=\"2459115\">New York</option>\n          <option value=\"2442047\">Los Angeles</option>\n          <option value=\"610264\">Marseille</option>\n          <option value=\"753692\">Barcelona </option>\n          <option value=\"721943\">Rome </option>\n        </select>\n      </form>\n\n      <Link to=\"/\">\n        <img\n          className=\"seta\"\n          src=\"https://prints.ultracoloringpages.com/e5584bc02039df88f778a97c6f9ddf15.png\"\n          alt=\"sign\"\n        />\n      </Link>\n      {location.id === \"\" ? null : (\n        <>\n          <p class=\"city\">{state.title}</p>\n          <Block\n            applicable_date={state.applicable_date}\n            weather_state_abbr={state.weather_state_abbr}\n            weather_state_name={state.weather_state_name}\n            max_temp={state.max_temp}\n            min_temp={state.min_temp}\n            wind_speed={state.wind_speed}\n            humidity={state.humidity}\n            visibility={state.visibility}\n            air_pressure={state.air_pressure}\n            predictability={state.predictability}\n            date={date}\n            iconRender={iconRender}\n          />\n        </>\n      )}\n\n      <aside>\n        <h2>Sources</h2>\n        <ul>\n          <li>\n            <a href=\"http://www.bbc.co.uk/weather/\">\n              <p>\n                <img\n                  src=\"https://img2.gratispng.com/20180629/gg/kisspng-computer-icons-logo-of-the-bbc-bbc-world-news-uc-browser-5b35c1518b81c0.0586131015302495535714.jpg\"\n                  alt=\"bbc\"\n                />{\" \"}\n                BBC\n              </p>\n            </a>\n          </li>\n          <li>\n            <a href=\"http://forecast.io/\">\n              <p>\n                <img\n                  src=\"https://img.utdstc.com/icon/c15/d52/c15d5292b6a52850c2bcb455eb882187629553e4113f2685c322e144ad9aa96c:200\"\n                  alt=\"forecast.io\"\n                />{\" \"}\n                Forecast.io\n              </p>\n            </a>\n          </li>\n          <li>\n            <a href=\"http://www.hamweather.com/\">\n              <p>\n                <img\n                  src=\"https://www.internetmatters.org/wp-content/uploads/2019/04/BBC_logo.png\"\n                  alt=\"hamweather\"\n                />{\" \"}\n                HAMweather\n              </p>\n            </a>\n          </li>\n          <li>\n            <a href=\"http://www.metoffice.gov.uk/\">\n              <p>\n                <img\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ6sGvrKSNxua0fsy8kMCuoHEvub8fY3X3sgw&usqp=CAU\"\n                  alt=\"metoffice\"\n                />{\" \"}\n                Met Office\n              </p>\n            </a>\n          </li>\n          <li>\n            <a href=\"http://openweathermap.org/\">\n              <p>\n                <img\n                  src=\"https://pbs.twimg.com/profile_images/1173919481082580992/f95OeyEW_400x400.jpg\"\n                  alt=\"openweather\"\n                />{\" \"}\n                OpenWeatherMap\n              </p>\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.wunderground.com/?apiref=fc30dc3cd224e19b\">\n              <p>\n                <img\n                  src=\"https://www.pinclipart.com/picdir/middle/495-4958488_the-weather-channel-logo-png-wunderground-weather-clipart.png\"\n                  alt=\"weatheruserground\"\n                />{\" \"}\n                Weather Underground\n              </p>\n            </a>\n          </li>\n          <li>\n            <a href=\"http://www.worldweatheronline.com/\">\n              <p>\n                <img\n                  src=\"http://www.chainlinkecosystem.com/wp-content/uploads/2021/02/worldweatheronline.png\"\n                  alt=\"worldweatheronline\"\n                />{\" \"}\n                World Weather Online\n              </p>\n            </a>\n          </li>\n        </ul>\n      </aside>\n\n      <footer>\n        <p>© Weather,Inc. 2021. we love weather</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default WeatherOne;\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Block from \"./block\";\nimport axios from \"axios\";\nimport \"./App.css\";\nfunction Location() {\n  const [state, setState] = useState({\n    applicable_date: \"\",\n    weather_state_name: \"\",\n    weather_state_abbr: \"\",\n    wind_speed: \"\",\n    wind_direction: \"\",\n    min_temp: \"\",\n    max_temp: \"\",\n    time: \"\",\n    air_pressure: \"\",\n    humidity: \"\",\n    visibility: \"\",\n    predictability: \"\",\n    sun_rise: \"\",\n    sun_set: \"\",\n    title: \"\",\n    city: \"\",\n    week: [],\n  });\n  const [location, setLocation] = useState({ id: \"\" });\n\n  // get informattion from the api acording to the request(id)\n  useEffect(() => {\n    async function getWeather() {\n      try {\n        const resp = await axios.get(\n          `https://www.metaweather.com/api/location/${location.id}/`\n        );\n        const data = JSON.parse(JSON.stringify(resp.data));\n\n        setState({\n          week: data.consolidated_weather,\n          city: data.title,\n          sun_rise: data.sun_rise,\n          sun_set: data.sun_rise,\n          time: data.time,\n          title: data.parent.title,\n        });\n        console.log(data.time);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getWeather();\n  }, [location.id]);\n\n  //formting the dates day of the week / moth / day\n  function date(date) {\n    var today = new Date(date);\n    var now = new Date();\n\n    if (now.toString().slice(0, 10) === today.toString().slice(0, 10)) {\n      return \"Today\";\n    } else if (now.getDate() + 1 === today.getDate()) {\n      return \"Tomorow\";\n    } else {\n      return today.toString().slice(0, 10);\n    }\n  }\n  //render the icons of weather acording to the weather\n  function iconRender(temp) {\n    const id = {\n      sn: \"https://www.metaweather.com/static/img/weather/sn.svg\",\n      sl: \"https://www.metaweather.com/static/img/weather/sl.svg\",\n      h: \"https://www.metaweather.com/static/img/weather/h.svg\",\n      t: \"https://www.metaweather.com/static/img/weather/t.svg\",\n      hr: \"https://www.metaweather.com/static/img/weather/hr.svg\",\n      lr: \"https://www.metaweather.com/static/img/weather/lr.svg\",\n      s: \"https://www.metaweather.com/static/img/weather/s.svg\",\n      hc: \"https://www.metaweather.com/static/img/weather/hc.svg\",\n      lc: \"https://www.metaweather.com/static/img/weather/lc.svg\",\n      c: \"https://www.metaweather.com/static/img/weather/c.svg\",\n    };\n\n    if (id.hasOwnProperty(temp)) {\n      return id[temp];\n    }\n  }\n\n  function handleChange(event) {\n    setLocation({ id: event.target.value });\n  }\n  //chaging the time from am to pm\n  function checkTime(time) {\n    if (time.toString().slice(11, 13) < 13) {\n      return true;\n    } else return false;\n  }\n\n  return (\n    <div>\n      <h3 className=\"title\">Info Weather</h3>\n\n      <Link to=\"/oneday\">\n        <img\n          className=\"seta\"\n          src=\"https://prints.ultracoloringpages.com/e5584bc02039df88f778a97c6f9ddf15.png\"\n          alt=\"sign\"\n        />\n      </Link>\n      <form type=\"select\">\n        <select value={location.id} onChange={handleChange}>\n          <option selected=\"selected\">Select a Country</option>\n          <option value=\"2459115\">New York</option>\n          <option value=\"2442047\">Los Angeles</option>\n          <option value=\"610264\">Marseille</option>\n          <option value=\"753692\">Barcelona </option>\n          <option value=\"721943\">Rome </option>\n        </select>\n      </form>\n\n      {state.time === \"\" ? null : (\n        <div className=\"sunTime\">\n          {checkTime(state.time) ? (\n            <p>\n              <b>Time</b> {state.time.toString().slice(11, 16)}a.m.{\" \"}\n            </p>\n          ) : (\n            <p>\n              <b>Time</b> {state.time.toString().slice(11, 16)}p.m.{\" \"}\n            </p>\n          )}\n          <p>\n            <b>Sunrise </b>\n            {state.sun_rise.toString().slice(11, 16)}a.m.{\" \"}\n          </p>\n          <p>\n            <b>Sunset </b>\n            {state.sun_set.toString().slice(11, 16)}p.m.{\" \"}\n          </p>\n        </div>\n      )}\n\n      <p class=\"city\">\n        {state.city}{\" \"}\n        <span style={{ fontSize: `11px`, marginLeft: `4px` }}>\n          {state.title}\n        </span>\n      </p>\n\n      {state.week.map((day) => {\n        return (\n          <Block\n            applicable_date={day.applicable_date}\n            weather_state_abbr={day.weather_state_abbr}\n            weather_state_name={day.weather_state_name}\n            max_temp={day.max_temp}\n            min_temp={day.min_temp}\n            wind_speed={day.wind_speed}\n            humidity={day.humidity}\n            visibility={day.visibility}\n            air_pressure={day.air_pressure}\n            location_type={day.location_type}\n            predictability={day.predictability}\n            date={date}\n            iconRender={iconRender}\n          />\n        );\n      })}\n      <footer>\n        <p>© Weather,Inc. 2021. we love weather</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default Location;\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport WeatherOne from \"./WeatherOne\";\nimport Location from \"./Location\";\nfunction App() {\n  return (\n    <div className=\"App\">\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/Weather-Forecast/oneday\" element={<WeatherOne />} />\n        <Route exact path=\"/Weather-Forecast/\" element={<Location />} />\n      </Routes>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}